#############################
# ホスト名がインベントリと一致するかチェック
#############################
- name: Check if host does match inventory_hostname
  when: inventory_hostname == item.host
  block:
  #############################
  # 配布元ファイル情報取得(ローカル)
  #############################
  - name: Check if source file exists (on control machine)
    stat:
      path: "{{ item.src }}"
    register: src_file_stat
    delegate_to: localhost

  - name: Fail if source file does not exist
    fail:
      msg: "{{ item.src }} が存在しません"
    when: src_file_stat.stat.exists == false

  - name: Success if source file does exist
    when: src_file_stat.stat.exists == true
    block:
    #############################
    # 配布先ファイル情報取得(リモート)
    #############################
    - name: Check if destination file exists (on remote host)
      stat:
        path: "{{ item.dest }}"
      register: dest_file_stat


    #############################
    # 配布先ファイルが無い場合(新規配布)
    # 配布itemをnew_distribution_itemsに追加
    # copy 処理はnew_distribution.ymlで実施
    #############################
    - name: Add item to new_distribution_items for new file distribution
      set_fact:
        new_distribution_items: "{{ new_distribution_items + [item] }}"
      when: dest_file_stat.stat.exists == false



    #############################
    # 配布先ファイルがある場合(上書き配布)
    # copy 処理はoverwriting.ymlで実施
    #############################
    - name: Task block for overwriting existing file
      when:
        - dest_file_stat.stat.exists == true
        #############################
        # ファイル差異チェック
        #############################
        - >
          (item.mode                    != dest_file_stat.stat.mode)      or
          (item.owner | default('root') != dest_file_stat.stat.pw_name)   or
          (item.group | default('root') != dest_file_stat.stat.gr_name)   or
          (src_file_stat.stat.checksum  != dest_file_stat.stat.checksum)

      # 下記タスクは全てファイル差異がある場合のみ必要。
      # 差異がなければ何もせずこのitem処理終了。

      block:
        #############################
        # バックアップファイルパスの設定
        #############################
        - name: Set backup file path
          set_fact:
            backup_file_path: "{{ backup_dir }}/{{ inventory_hostname }}_{{ item.dest | basename }}.bak_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"



        #############################
        # バックアップ取得 ※NAS保存
        #############################
        - name: Ensure backup directory exists on remote NAS
          file:
            path: "{{ backup_dir }}"
            state: directory
            mode: '0755'


        - name: Backup existing remote file to NAS before overwriting
          command: cp "{{ item.dest }}" "{{ backup_file_path }}"

        - name: Verify backup file exists
          stat:
            path: "{{ backup_file_path }}"
          register: backup_file_stat_check


        - name: Fail if backup file not found
          fail:
            msg: "Backup file {{ backup_file_path }} not found after cp command. Overwrite aborted."
          when:
            - backup_file_stat_check.stat.exists == false


        #############################
        # 配布itemをoverwrite_itemsに追加
        # copy 処理はoverwriting.ymlで実施
        #############################
        - name: Add item to overwrite_items if destination exists and files differ
          set_fact:
            overwrite_items: "{{ overwrite_items + [item] }}"
          when: backup_file_stat_check.stat.exists == true
